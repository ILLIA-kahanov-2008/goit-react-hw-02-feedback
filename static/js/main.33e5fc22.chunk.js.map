{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Section","title","children","className","FeedbackOptions","onLeaveFeedback","options","map","option","index","type","name","value","onClick","Notification","message","style","color","fontSize","Statistics","good","neutral","bad","total","positivePercentage","s","statsList","statsItem","App","state","handleClick","e","target","setState","prevState","this","totalFeedback","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,UAAY,8BAA8B,UAAY,gC,uKCCjE,SAASC,EAAT,GAAoC,IAAlBC,EAAiB,EAAjBA,MAAMC,EAAW,EAAXA,SAC7B,OACE,0BAASC,UAAU,UAAnB,UACE,6BAAKF,IACJC,KCJA,IAAME,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QACjD,OACE,qBAAKH,UAAU,kBAAf,SACGG,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACX,uBACEN,UAAU,SACVO,KAAK,SACLC,KAAMH,EACNI,MAAOJ,EACPK,QAASR,GACJI,SCVR,SAASK,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAC7B,OACE,oBAAGZ,UAAU,kBAAkBa,MAAO,CAACC,MAAM,MAAOC,SAAU,IAA9D,cAAsEH,K,oBCAnE,SAASI,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACtD,OAAc,IAAVD,EAEA,qBAAIpB,UAAWsB,IAAEC,UAAjB,UACE,qBAAIvB,UAAWsB,IAAEE,UAAjB,UACE,yCADF,IACqB,+BAAOP,OAE5B,qBAAIjB,UAAWsB,IAAEE,UAAjB,UACE,4CADF,IACwB,+BAAON,OAE/B,qBAAIlB,UAAWsB,IAAEE,UAAjB,UACE,wCADF,IACoB,+BAAOL,OAE3B,qBAAInB,UAAWsB,IAAEE,UAAjB,UACE,0CADF,IACsB,+BAAOJ,OAE7B,qBAAIpB,UAAWsB,IAAEE,UAAjB,UACE,sDADF,IACkC,iCAAOH,EAAP,aAKjC,cAACV,EAAD,CAAcC,QAAQ,sB,UCjBzBa,E,4MACJC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,YAAc,SAACC,GACb,IAAQpB,EAASoB,EAAEC,OAAXrB,KACR,EAAKsB,UAAS,SAACC,GAAD,sBACXvB,EAAOuB,EAAUvB,GAAQ,O,wDAI9B,WACE,MAA+BwB,KAAKN,MACpC,OADA,EAAQT,KAAR,EAAcC,QAAd,EAAuBC,M,6CAIzB,WACE,IAAQF,EAASe,KAAKN,MAAdT,KACFgB,EAAgBD,KAAKE,qBAC3B,OAAOC,KAAKC,MAAOnB,EAAOgB,EAAiB,O,oBAG7C,WACE,MAA+BD,KAAKN,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,sBAAKnB,UAAU,MAAf,UACE,cAACH,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEK,QAAS,CAAC,OAAQ,UAAW,OAC7BD,gBAAiB8B,KAAKL,gBAG1B,cAAC9B,EAAD,CAASC,MAAM,aAAf,SACE,cAACkB,EAAD,CACEhB,UAAU,aACViB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,KAAKE,qBACZb,mBAAoBW,KAAKK,6C,GA1CnBC,aAkDHb,ICtDfc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.33e5fc22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsList\":\"Statistics_statsList__2q5cg\",\"statsItem\":\"Statistics_statsItem__2NvPr\"};","import PropTypes from 'prop-types';\r\n\r\nexport function Section({title,children}) {\r\n  return (\r\n    <section className=\"section\">\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};","import PropTypes from \"prop-types\";\n\nexport const FeedbackOptions = ({ onLeaveFeedback, options }) => {\n  return (\n    <div className=\"feedbackOptions\">\n      {options.map((option, index) => (\n        <input\n          className=\"button\"\n          type=\"button\"\n          name={option}\n          value={option}\n          onClick={onLeaveFeedback}\n          key={index}\n        />\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func,\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n","import PropTypes from 'prop-types';\r\n\r\nexport function Notification({ message }) {\r\n  return (\r\n    <p className=\"s.notifyMessage\" style={{color:\"red\", fontSize: 24}}> { message }</p>  \r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n}","import PropTypes from \"prop-types\";\nimport { Notification } from \"../Notification/Notification\";\n\nimport s from \"./Statistics.module.css\";\nexport function Statistics({ good, neutral, bad, total, positivePercentage }) {\n  if (total !== 0) {\n    return (\n      <ul className={s.statsList}>\n        <li className={s.statsItem}>\n          <span>Good:</span> <span>{good}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span>Neutral:</span> <span>{neutral}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span>Bad:</span> <span>{bad}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span>Total:</span> <span>{total}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span>Positive Feedback:</span> <span>{positivePercentage}%</span>\n        </li>\n      </ul>\n    );\n  }\n  return <Notification message=\"No feedback given\" />;\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import { Component } from \"react\";\n\nimport { Section } from \"../Section/Section\";\nimport { FeedbackOptions } from \"../FeedbackOptions/FeedbackOptions\";\nimport { Statistics } from \"../Statistics/Statistics\";\n// import { Notification } from \"./components/Notification/Notification\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = (e) => {\n    const { name } = e.target;\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    return Math.round((good / totalFeedback) * 100);\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={[\"good\", \"neutral\", \"bad\"]}\n            onLeaveFeedback={this.handleClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            className=\"statistics\"\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}