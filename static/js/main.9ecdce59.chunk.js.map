{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","App.jsx","index.js"],"names":["Section","title","children","className","FeedbackOptions","onLeaveFeedback","options","map","option","index","type","name","value","onClick","Notification","message","style","color","fontSize","Statistics","good","neutral","bad","total","positivePercentage","App","state","handleClick","e","target","setState","prevState","this","totalFeedback","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAEO,SAASA,EAAT,GAAoC,IAAlBC,EAAiB,EAAjBA,MAAMC,EAAW,EAAXA,SAC7B,OACE,0BAASC,UAAU,UAAnB,UACE,6BAAKF,IACJC,KCJA,IAAME,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAChC,OAD+D,EAAdC,QAClCC,KAAI,SAACC,EAAQC,GAAT,OACjB,uBACEC,KAAK,SACLC,KAAMH,EACNI,MAAOJ,EACPK,QAASR,GACJI,OCPJ,SAASK,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAC7B,OACE,oBAAGZ,UAAU,kBAAkBa,MAAO,CAACC,MAAM,MAAOC,SAAU,IAA9D,cAAsEH,KCAnE,SAASI,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACtD,OAAgB,IAAXD,EAED,gCACE,uCAAUH,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,UAGG,cAACV,EAAD,CAAcC,QAAQ,sB,UCN3BU,E,4MACJC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,YAAc,SAACC,GACb,IAAQjB,EAASiB,EAAEC,OAAXlB,KACR,EAAKmB,UAAS,SAACC,GAAD,sBACXpB,EAAOoB,EAAUpB,GAAQ,O,wDAI9B,WACE,MAA+BqB,KAAKN,MACpC,OADA,EAAQN,KAAR,EAAcC,QAAd,EAAuBC,M,6CAIzB,WACE,IAAQF,EAASY,KAAKN,MAAdN,KACFa,EAAgBD,KAAKE,qBAC3B,OAAOC,KAAKC,MAAOhB,EAAOa,EAAiB,O,oBAG7C,WACE,MAA+BD,KAAKN,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,sBAAKnB,UAAU,MAAf,UACE,cAACH,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEK,QAAS,CAAC,OAAQ,UAAW,OAC7BD,gBAAiB2B,KAAKL,gBAG1B,cAAC3B,EAAD,CAASC,MAAM,aAAf,SACE,cAACkB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,KAAKE,qBACZV,mBAAoBQ,KAAKK,6C,GAzCnBC,aAiDHb,ICrDfc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9ecdce59.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport function Section({title,children}) {\r\n  return (\r\n    <section className=\"section\">\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};","import PropTypes from \"prop-types\";\r\n\r\nexport const FeedbackOptions = ({ onLeaveFeedback, options }) => {\r\n  return options.map((option, index) => (\r\n    <input\r\n      type=\"button\"\r\n      name={option}\r\n      value={option}\r\n      onClick={onLeaveFeedback}\r\n      key={index}\r\n    />\r\n  ));\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func,\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport function Notification({ message }) {\r\n  return (\r\n    <p className=\"s.notifyMessage\" style={{color:\"red\", fontSize: 24}}> { message }</p>  \r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n}","import PropTypes from 'prop-types';\r\n\r\nimport { Notification } from \"../Notification/Notification\";\r\n\r\nexport function Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  if ( total  !== 0) {\r\n    return (\r\n      <div>\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n        <p>Total: {total}</p>\r\n        <p>Positive Feedback: {positivePercentage}%</p>\r\n      </div>)\r\n  }\r\n   return (<Notification message=\"No feedback given\" />)  \r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired\r\n};","import { Component } from \"react\";\n\nimport { Section } from \"./components/Section/Section\";\nimport {FeedbackOptions} from \"./components/FeedbackOptions/FeedbackOptions\";\nimport { Statistics } from \"./components/Statistics/Statistics\";\n// import { Notification } from \"./components/Notification/Notification\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = (e) => {\n    const { name } = e.target;\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback() {    \n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    return Math.round((good / totalFeedback) * 100);\n  }\n\n  render() {  \n    const { good, neutral, bad } = this.state;\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={[\"good\", \"neutral\", \"bad\"]}\n            onLeaveFeedback={this.handleClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">          \n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />          \n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}